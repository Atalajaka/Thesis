max exito con min memoria

exito / tamaño

buscar mejor estrategia, si existe, si no se explica tmb

esto es un caso particular, per oes extrapolable/escalable

formato password y hash concreto para pruebas -> otros formatos req otros tamaños

ESQUEMA:

Hash? En qué se basa, aplicaciones

Ataques a hash -> paradoja cumple, algoritmo Yubal, tabla arcoiris

Explicar tablas arcoiris, construcción

Explicar ataque:

	- Formato password
	- Función resumen
	- Tamaños de tabla (diagonal)
	- Centrar en esquina inferior izquierda, porque fuera todo éxitos
	- r1
	- r2
	- r1 r2
	- r1 r2 r2 r1 r1 r2 r2 r2
	- r1 r2 r2

RFC SHA-1
RFC MD5
RFC CRC32

Sintácticas no de acuerdo

Estructura:
	- Motivar mejor, mucho mejor
		+ Introducción: más extensa, justificar y presentar las funciones de resumen (la gente no las conoce), breve historia de: diseño, en qué se basan (Damgard Merkle, Handbook of applied cryptography, citar referencias), uso habitual y en criptografía (métodos de cifra electrónica, firma electrónica, identificación, algoritmo de Lamport Key, aplicaciones en general). Encontrar colisiones útil para demás cosas para que se usan las funciones resumen.
		+ Motivación: hablar antes de todo lo de funciones de resumen, antes que del ataque del arco iris. Funciones de resumen se basan en fortaleza contra colisiones, por lo cual se puede medir su seguridad de esta forma.
		+ Objetivos: diseñar un método de búsqueda de colisiones, el cual será testado su comportamiento mediante una experimentación en un sistema que usa hashes para guardar los psws de entrada al sistema.

	- Capítulo 2: puede ir todo a casi todo en el apartado anterior. Introducción es presentación histórica de la relevancia de las funciones hash, para poder justificar el interés y la actualidad de las funciones resumen y el interés de atacar las funciones resumen buscando colisiones.

	- Capítulo 3: distintos métodos de la búsqueda de colisiones. Palabras de psw más habituales en el año 2016. Al final del capítulo presentar el ataque del arco iris, y en el siguiente ya se expande. TMTO no es antesecor al ataque, y que después eso se utiliza para proponer el ataque del arco iris. Apartado 3.1 como implementación para la búsqueda de colisiones. Rivest se enseña como alternativa que no se ha hecho al final, y no es alternativa al TMTO, sino alternativa al ataque del arco iris, y siempre para cuando el hash pilla el patrón que quiere, da igual en qué columna (buscar tablas de Rivest, si se encuentran se comparan, si no se dice). Como nos centramos en la esquina inferior izquierda . 

	- Capítulo 4: no llamarlo ataque del arco iris (porque se ha llamado antes), este capítulo es MI modificación del ataque, con objetivo igual que Rivest de reducir colisiones y aprovechar mejor el espacio en memoria. Después de eso se cuenta el CRC32 y todas las condiciones de experimentación que considero, y por qué esas condiciones y no otras. Luego hablar de escalabilidad. Como se iban a lanzar muchos experimentos se elige una función corta, pero todo se puede escalar a dominios más amplios o funciones más complejas pero con EL MISMO resultado esperado, los cuales deberían repetirse cuando se escale, sólo requiere más memoria y tiempo. Hablar de CRC32, MD5, SHA1, SHA2, SHA3 (SHA 256 bits), y mostrar cuál sería el tamaño de tabla esperado y la reducción para cada función hash distinta. "Proponer primero una modificación y luego para testarlo presento mi implementación". Quitar los tamaños iniciales en pág 12. Tamaños de tabla: primero se consideraron muchos tamaños, y con eso se hizo un cribado, y con eso se consideró la diagonal, y a partir de ese punto se consideraron qué tamaños dan el mejor resultado/tamaño. 
	- Capítulo 4: voy a hacer mi implementación del ataque del arco iris, primero todo con R1, sacar todos los resultados iniciales. Luego saco R2, y comparo y veo que la función de reconstrucción afecta. Luego ya enseño las combinaciones de las funciones de reconstrucción.
